@startuml "Payment Module Component Diagram"

' Set title and description
title Payment Module Component Diagram

' Use UML component notation style
skinparam componentStyle uml2

' Background and colors - light coral color scheme for payment module
skinparam {
  BackgroundColor white
  ComponentBackgroundColor LightCoral
  ComponentBorderColor DarkRed
  InterfaceBackgroundColor white

  TitleFontSize 20
  TitleFontColor DarkRed

  ' Font sizes
  ComponentFontSize 14
  InterfaceFontSize 12
}

' Simple left to right layout like the Auth diagram
left to right direction

' Main payment component (central)
[<<component>>\nPayment Processor] as PaymentProcessor

' Connected components - reduced to match doctor diagram style
[<<component>>\nAppointment Handler] as AppointmentSystem
[<<component>>\nPatient Portal] as PatientPortal
[<<component>>\nDoctor Portal] as DoctorPortal
[<<component>>\nTransaction Manager] as TransactionManager
[<<component>>\nStripe Gateway] as StripeService
[<<component>>\nDatabase Server] as DatabaseServer

' Simple interfaces (ball and socket notation)
() "payment data" as PaymentInterface
() "appointment" as AppointmentInterface
() "patient" as PatientInterface
() "doctor" as DoctorInterface
() "transactions" as TransactionInterface
() "stripe" as StripeInterface
() "database" as DatabaseInterface

' Connect components to interfaces
PaymentProcessor -- PaymentInterface
AppointmentSystem -- AppointmentInterface
PatientPortal -- PatientInterface
DoctorPortal -- DoctorInterface
TransactionManager -- TransactionInterface
StripeService -- StripeInterface
DatabaseServer -- DatabaseInterface

' Connect interfaces to components that use them
PaymentInterface -- AppointmentSystem : appointment billing
PaymentInterface -- PatientPortal : payment initiation
PaymentInterface -- DoctorPortal : payment verification
PaymentInterface -- StripeInterface : payment processing
StripeInterface -- PaymentProcessor : transaction handling
AppointmentInterface -- PaymentProcessor : appointment details
TransactionInterface -- PaymentProcessor : payment records
PaymentProcessor -- DatabaseInterface : store payment data
PatientInterface -- PaymentProcessor : patient billing
DoctorInterface -- PaymentProcessor : doctor compensation
TransactionManager -- DatabaseInterface : store transactions

@enduml
