@startuml "Patient Module Component Diagram"

' Set title and description
title Patient Module Component Diagram

' Use UML component notation style
skinparam componentStyle uml2

' Background and colors - same light blue color scheme as original
skinparam {
  BackgroundColor white
  ComponentBackgroundColor LightSkyBlue
  ComponentBorderColor DarkBlue
  InterfaceBackgroundColor white

  TitleFontSize 20
  TitleFontColor DarkBlue

  ' Font sizes
  ComponentFontSize 14
  InterfaceFontSize 12
}

' Simple left to right layout like the Auth diagram
left to right direction

' Main patient server component (central)
[<<component>>\nPatient Profile Server] as PatientServer

' Connected components - aligned with actual code
[<<component>>\nUser Management] as UserManager
[<<component>>\nAppointment Booking] as AppointmentBooking
[<<component>>\nDoctors Module] as DoctorModule
[<<component>>\nPayment Processing] as PaymentSystem
[<<component>>\nNotification Service] as NotificationSystem
[<<component>>\nAuthentication System] as AuthSystem
[<<component>>\nDatabase Server] as DatabaseServer

' Simple interfaces (ball and socket notation)
() "patient profile" as ProfileInterface
() "user info" as UserInterface
() "appointments" as AppointmentInterface
() "doctors" as DoctorInterface
() "payments" as PaymentInterface
() "notifications" as NotificationInterface
() "auth" as AuthInterface
() "database" as DatabaseInterface

' Connect components to interfaces
PatientServer -- ProfileInterface
UserManager -- UserInterface
AppointmentBooking -- AppointmentInterface
DoctorModule -- DoctorInterface
PaymentSystem -- PaymentInterface
NotificationSystem -- NotificationInterface
AuthSystem -- AuthInterface
DatabaseServer -- DatabaseInterface

' Connect interfaces to components that use them
ProfileInterface -- AppointmentBooking : patient appointments
ProfileInterface -- UserManager : personal information
ProfileInterface -- PaymentSystem : billing details
ProfileInterface -- DoctorInterface : medical consultations
AppointmentInterface -- NotificationInterface : appointment reminders
AppointmentInterface -- PaymentInterface : payment processing
UserInterface -- AuthInterface : user authentication
PatientServer -- DatabaseInterface : store patient data
AppointmentBooking -- DatabaseInterface : store appointments
UserManager -- DatabaseInterface : store user profiles
PaymentSystem -- DatabaseInterface : store payments

@enduml
